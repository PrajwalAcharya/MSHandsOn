<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="com.example.lwcurrencyconvert.controller.CurrencyConvertProxy"/>
<fullyQualifiedTypeName name="com.netflix.client.config.IClientConfig"/>
<fullyQualifiedTypeName name="com.netflix.loadbalancer.IPing"/>
<fullyQualifiedTypeName name="com.netflix.loadbalancer.PingUrl"/>
<fullyQualifiedTypeName name="com.netflix.loadbalancer.IRule"/>
<fullyQualifiedTypeName name="com.netflix.loadbalancer.WeightedResponseTimeRule"/>
<fullyQualifiedTypeName name="com.example.lwcurrencyconvert.RibbonConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalancerClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="org.springframework.boot.web.client.RestTemplateBuilder"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Lazy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.ServiceInstance"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="com.example.model.LoginModel"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="org.springframework.util.MultiValueMap"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.util.LinkedMultiValueMap"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="com.example.model.IAMResponse"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="com.example.order.model.Order"/>
<fullyQualifiedTypeName name="com.example.order.repository.OrderRepository"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.example.order.service.OrderService"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
</qualifiedTypeNameHistroy>
