package com.example.lwcurrencyconvert.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@Service
public class CurrencyConvertServiceImpl implements CurrencyConvertService {

	@Autowired
	RestTemplate restTemplate;

	@HystrixCommand(fallbackMethod = "convertCurrency_fallback")
	@Override
	public String convertCurrency(Double amount, String countryCode) {

		Double conversionFactor = restTemplate.getForObject(
				"http://localhost:8081/conversionFact/getConversionFactor/countryCode/{countryCode}", Double.class, countryCode);
		Double convertedAmount = amount * conversionFactor;
		return "Converted amount is : " + convertedAmount;
	}

	public String convertCurrency_fallback(Double amount, String countryCode) {

		return "The service is currently unavailable.We are working on the issue.";
	}

}
